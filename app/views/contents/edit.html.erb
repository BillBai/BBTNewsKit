<div class="page-header">
  <% if @content.parent_content_id == 0%>
      <%= link_to t('back'), contents_path, 
    {role: 'button', class: 'btn btn-default'}%>
  <% else %>
      <%= link_to t('back'), :back, 
    {role: 'button', class: 'btn btn-default'}%>
  <% end %>
</div>

    <%= link_to t('back'), content_path(@content) %>
<div class="row">
  <div class="col-md-8">
    <div class="panel panel-default">
      <div class="panel-heading">
        <%= t :content_meta_data %>
        <%=raw status_label(@content, t(@content.status)) %>
        <%=raw content_type_label(@content, t(@content.content_type)) %>
      </div>
      <div class="panel-body">
        <%= render partial: 'form' , locals: {content_type: @content.content_type}%>
      </div>
    </div>
    <% case  @content.content_type %>
    <% when 'article' %>
        <strong><%= t :article_body %></strong>
        <hr/>

        <div id="summernote" >
          <%=raw @content.body_html %>
        </div>

    <% when 'album' %>
        <h2><%= t :add_photo %></h2>
        <%= render 'photos/form' %>

    <% when 'video' %>
    <% when 'special'%>
        <hr/>
        <button class="btn btn-primary" id="add-article-button" onclick="add_content(this)">
          <span class='glyphicon glyphicon-file'></span> <%= t :add_article %>
        </button>
        <button class="btn btn-primary" id="add-album-button" onclick="add_content(this)">
          <span class='glyphicon glyphicon-picture'></span> <%= t :add_album %>
        </button>
        <button class="btn btn-primary" id="add-video-button" onclick="add_content(this)">
          <span class='glyphicon glyphicon-facetime-video'></span> <%= t :add_video %>
        </button>
        <%= render partial: 'list', locals: {contents: @content.subcontents} %>
    <% end %>
  </div>

  <div class="col-md-4">
    <!-- Actions panel-->
    <div class="panel panel-primary">
      <div class="panel-heading">
        <%= t :actions %>
      </div>
      <div class="panel-body">
        <button type="button" class="btn btn-primary" id="save-content-button"><%= t :save_draft %></button>
        <!-- Single button -->
        <div class="btn-group">
          <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
            <%= t :other_action %> <span class="caret"></span>
          </button>
          <ul class="dropdown-menu" role="menu">
            <li><%= link_to t('delete'), content_path(@content), method: :delete, data: { confirm: t('are_you_sure')}, role: 'button', class: 'btn btn-danger' %>
            </li>
          </ul>
        </div>
      </div>
    </div>
    <!-- Actions panel END -->

    <!-- Publisher panel -->
    <div class="panel panel-default">
      <div class="panel-heading"><%= t :publisher %></div>
      <div class="panel-body">
        <%= label_tag 'name', @content.publisher.name %>
      </div>
    </div>
    <!--User panel END-->

    <!-- Author panel -->
    <div class="panel panel-default">
      <div class="panel-heading"><%= t :author %></div>
      <div class="panel-body">
        <%= label_tag 'display_name', @content.user.display_name %>
      </div>
    </div>
    <!--Author panel END-->

    <!--Section panel -->
    <div class="panel panel-default">
      <div class="panel-heading"><%= t :section %></div>
      <div class="panel-body">
        <%= select_tag :content_section, options_from_collection_for_select(Section.where(active: true), :id, :module, selected: @content.section_id) , {class: 'selectpicker', id: 'content-section-picker'}%>
      </div>
    </div>
    <!-- Section panel END-->
  </div>
</div>



<script>

  $(document).ready(function() {
      $('#summernote').summernote({
          height: 400,
          fontsize: "26px",
          toolbar: [
            ['style', ['style']], // no style button
            ['style', ['bold', 'italic', 'underline', 'superscript', 'subscript', 'strikethrough', 'clear', ]],
            //['fontsize', ['fontsize']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            //['height', ['height']],
            ['table', ['table']],
            ['insert', ['link', 'picture', 'video', 'hr']],
            ['layout',['fullscreen', 'codeview', 'undo', 'redo', 'help']]
          ],
          onImageUpload: function(files, editor, welEdtitable) {
              sendFile(files[0], editor, welEdtitable);
              //console.log(welEdtitable);
          },
          onpaste: function(e) {
            var thisNote = $(this);
            var updatePastedText = function(someNote){
                var original = someNote.code();
                var cleaned = CleanPastedHTML(original); //this is where to call whatever clean function you want. I have mine in a different file, called CleanPastedHTML.
                someNote.code('').html(cleaned); //this sets the displayed content editor to the cleaned pasted code.
            };
            setTimeout(function () {
                //this kinda sucks, but if you don't do a setTimeout, 
                //the function is called before the text is really pasted.
                updatePastedText(thisNote);
            }, 10);
        }
      });

      function sendFile(file, editor, welEdtitable) {
          var formData = new FormData();
          formData.append("file", file);
          console.log('image upload:', file, editor, welEdtitable);
          console.log(formData);
          $.ajax({
              data: formData,
              type: "POST",
              url: '/contents/<%= @content.id %>/article_body_images',
              cache: false,
              contentType: false,
              processData: false,
              success: function(data, status, jqXHR) {
                  console.log(url);
                  editor.insertImage(welEdtitable, url);
              },
              complete: function(data){
                  //set callback to resize image px to % when insert complete
                  welEdtitable.data('callbacks').onChange = function($editable_html, $editable)
                  {
                    $("img[src*='" + url + "']")[0].style.width = "100%";
                    $editable.data('callbacks').onChange = null
                  };

                  var url = data.responseText;
                  console.log('complete', url);
                  editor.insertImage(welEdtitable, url);
              }
          });
      }
  });



  $("#save-content-button").click(function() {
      var editor = $('#summernote');
      if(editor.length != 0) {        // if there is no editor, that means the content_type is not Article.
          $("#content_body_html").val(editor.code());
      }
      $('#content_author_id').val($('#content-author-picker').val());
      $('#content_section_id').val($('#content-section-picker').val());
      $('#content_publisher_id').val($('#content-publisher-picker').val());
      $("#content-form").submit();
  });

  function add_content(obj) {
    $('#content_author_id').val($('#content-author-picker').val());
    $('#content_section_id').val($('#content-section-picker').val());
    $('#content_publisher_id').val($('#content-publisher-picker').val());
    var formData = new FormData($('#content-form')[0]);
    $.ajax({
        data: formData,
        method: "PATCH",
        url: <%=raw "'#{content_path(@content)}?new=true'"%>,
        cache: false,
        contentType: false,
        processData: false,
        success: function(){
          switch(obj.id)
          {
            case 'add-article-button':
              window.location.replace("<%= add_content_contents_path(@content, content_type: :article) %>")
              break;
            case 'add-album-button':
              window.location.replace("<%= add_content_contents_path(@content,content_type: :album)%>")
              break;
            case 'add-video-button':
              window.location.replace("<%= add_content_contents_path(@content,content_type: :video)%>")
              break;
            default:
              console.log("unkonw")
          }
        },
        error: function(){
          console.log("error")
        }
    });
  }

function CleanPastedHTML(input) {
  // 1. remove line breaks / Mso classes
  var stringStripper = /(\n|\r| class=(")?Mso[a-zA-Z]+(")?)/g;
  var output = input.replace(stringStripper, ' ');
  // 2. strip Word generated HTML comments
  var commentSripper = new RegExp('<!--(.*?)-->','g');
  var output = output.replace(commentSripper, '');
  var tagStripper = new RegExp('<(/)*(a|h[1-9]|div|meta|link|span|\\?xml:|st1:|o:|font)(.*?)>','gi');
  // 3. remove tags leave content if any
  output = output.replace(tagStripper, '');
  // 4. Remove everything in between and including tags '<style(.)style(.)>'
  var badTags = ['style', 'script','applet','embed','noframes','noscript'];

  for (var i=0; i< badTags.length; i++) {
    tagStripper = new RegExp('<'+badTags[i]+'.*?'+badTags[i]+'(.*?)>', 'gi');
    output = output.replace(tagStripper, '');
  }
  // 5. remove attributes ' style="..."'
  var badAttributes = ['style', 'start'];
  for (var i=0; i< badAttributes.length; i++) {
    var attributeStripper = new RegExp(' ' + badAttributes[i] + '="(.*?)"','gi');
    output = output.replace(attributeStripper, '');
  }
  return "<p>" + output + "</p>";
}

</script>


